/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Demo, DemoInterface } from "../Demo";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "Paid",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104b08061005f6000396000f3fe6080604052600436106100385760003560e01c80631b9265b81461004c57806351cff8d9146100565780638da5cb5b1461007f57610047565b36610047576100456100aa565b005b600080fd5b6100546100aa565b005b34801561006257600080fd5b5061007d600480360381019061007891906102d2565b6100fc565b005b34801561008b57600080fd5b5061009461024b565b6040516100a1919061030e565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff167fdf9a51129930649214df58f542322c245372c6f2fa6fc3c9b40d927c597cd23034426040516100f2929190610342565b60405180910390a2565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461018b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610182906103c8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f19061045a565b60405180910390fd5b60008290508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610245573d6000803e3d6000fd5b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029f82610274565b9050919050565b6102af81610294565b81146102ba57600080fd5b50565b6000813590506102cc816102a6565b92915050565b6000602082840312156102e8576102e761026f565b5b60006102f6848285016102bd565b91505092915050565b61030881610294565b82525050565b600060208201905061032360008301846102ff565b92915050565b6000819050919050565b61033c81610329565b82525050565b60006040820190506103576000830185610333565b6103646020830184610333565b9392505050565b600082825260208201905092915050565b7f796f7520617265206e6f742061206f776e657200000000000000000000000000600082015250565b60006103b260138361036b565b91506103bd8261037c565b602082019050919050565b600060208201905081810360008301526103e1816103a5565b9050919050565b7f796f7520617265206e6f7420776974686472617720746f206e756c6c2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061044460248361036b565b915061044f826103e8565b604082019050919050565b6000602082019050818103600083015261047381610437565b905091905056fea2646970667358221220feccefda4e635964324efdefc1a0a0d3256643790986540eed909bbefe0f9b6f64736f6c634300081b0033";

type DemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Demo__factory extends ContractFactory {
  constructor(...args: DemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Demo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Demo__factory {
    return super.connect(runner) as Demo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoInterface {
    return new Interface(_abi) as DemoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Demo {
    return new Contract(address, _abi, runner) as unknown as Demo;
  }
}
