/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AuctionEngine,
  AuctionEngineInterface,
} from "../../contracts/AuctionEngine";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "itemName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startingPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "AuctionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "AuctionEnded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctions",
    outputs: [
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "string",
        name: "item",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startingPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "finalPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "discountRate",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "stopped",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_item",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_startingPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_discountRate",
        type: "uint256",
      },
    ],
    name: "createAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getPriceFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600a600155348015601457600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611350806100646000396000f3fe60806040526004361061004a5760003560e01c80634534cd9c1461004f5780634e4637341461008c578063571a26a0146100b55780638da5cb5b146100f9578063d96a094a14610124575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610943565b610140565b604051610083919061097f565b60405180910390f35b34801561009857600080fd5b506100b360048036038101906100ae91906109ff565b61032f565b005b3480156100c157600080fd5b506100dc60048036038101906100d79190610943565b61056d565b6040516100f0989796959493929190610b73565b60405180910390f35b34801561010557600080fd5b5061010e61067a565b60405161011b9190610c19565b60405180910390f35b61013e60048036038101906101399190610943565b61069e565b005b6000806002838154811061015757610156610c34565b5b9060005260206000209060080201604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546101d790610c92565b80601f016020809104026020016040519081016040528092919081815260200182805461020390610c92565b80156102505780601f1061022557610100808354040283529160200191610250565b820191906000526020600020905b81548152906001019060200180831161023357829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff16151515158152505090508060e00151156102ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e490610d0f565b60405180910390fd5b60008160800151426102ff9190610d5e565b905060008260c00151826103139190610d92565b90508083604001516103259190610d5e565b9350505050919050565b6000821461033d5781610342565b6202a3005b915081816103509190610d92565b831015610392576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038990610e20565b60405180910390fd5b60006040518061010001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185815260200185815260200142815260200184426104249190610e40565b8152602001838152602001600015158152509050600281908060018154018082558091505060019003906000526020600020906008020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816104c0919061104f565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff02191690831515021790555050507f5bf34ed94988e5dcdc7d1faaa54eb1d3b55f45d5f11457e235afb21a8ebbe73c60016002805490506105489190610d5e565b8787878760405161055d95949392919061115d565b60405180910390a1505050505050565b6002818154811061057d57600080fd5b90600052602060002090600802016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546105c690610c92565b80601f01602080910402602001604051908101604052809291908181526020018280546105f290610c92565b801561063f5780601f106106145761010080835404028352916020019161063f565b820191906000526020600020905b81548152906001019060200180831161062257829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154908060070160009054906101000a900460ff16905088565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600282815481106106b4576106b3610c34565b5b906000526020600020906008020190508060070160009054906101000a900460ff1615610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d90610d0f565b60405180910390fd5b8060050154421061075c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610753906111f7565b60405180910390fd5b600061076783610140565b9050803410156107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a390611263565b60405180910390fd5b60018260070160006101000a81548160ff021916908315150217905550808260030181905550600081346107e09190610d5e565b90506000811115610833573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610831573d6000803e3d6000fd5b505b8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600154856108819190610d92565b61088b91906112b2565b846108969190610d5e565b9081150290604051600060405180830381858888f193505050501580156108c1573d6000803e3d6000fd5b507fbafc4bda865d4d1f8d5b16f883e996fde0fe71112fac81503876d353756944008483336040516108f5939291906112e3565b60405180910390a150505050565b600080fd5b600080fd5b6000819050919050565b6109208161090d565b811461092b57600080fd5b50565b60008135905061093d81610917565b92915050565b60006020828403121561095957610958610903565b5b60006109678482850161092e565b91505092915050565b6109798161090d565b82525050565b60006020820190506109946000830184610970565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126109bf576109be61099a565b5b8235905067ffffffffffffffff8111156109dc576109db61099f565b5b6020830191508360018202830111156109f8576109f76109a4565b5b9250929050565b600080600080600060808688031215610a1b57610a1a610903565b5b600086013567ffffffffffffffff811115610a3957610a38610908565b5b610a45888289016109a9565b95509550506020610a588882890161092e565b9350506040610a698882890161092e565b9250506060610a7a8882890161092e565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ab282610a87565b9050919050565b610ac281610aa7565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b02578082015181840152602081019050610ae7565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b2a82610ac8565b610b348185610ad3565b9350610b44818560208601610ae4565b610b4d81610b0e565b840191505092915050565b60008115159050919050565b610b6d81610b58565b82525050565b600061010082019050610b89600083018b610ab9565b8181036020830152610b9b818a610b1f565b9050610baa6040830189610970565b610bb76060830188610970565b610bc46080830187610970565b610bd160a0830186610970565b610bde60c0830185610970565b610beb60e0830184610b64565b9998505050505050505050565b6000610c0382610a87565b9050919050565b610c1381610bf8565b82525050565b6000602082019050610c2e6000830184610c0a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610caa57607f821691505b602082108103610cbd57610cbc610c63565b5b50919050565b7f61756374696f6e2069732073746f707065642100000000000000000000000000600082015250565b6000610cf9601383610ad3565b9150610d0482610cc3565b602082019050919050565b60006020820190508181036000830152610d2881610cec565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d698261090d565b9150610d748361090d565b9250828203905081811115610d8c57610d8b610d2f565b5b92915050565b6000610d9d8261090d565b9150610da88361090d565b9250828202610db68161090d565b91508282048414831517610dcd57610dcc610d2f565b5b5092915050565b7f646f6e7420656e6f7567687420707269636520666f72206475726174696f6e00600082015250565b6000610e0a601f83610ad3565b9150610e1582610dd4565b602082019050919050565b60006020820190508181036000830152610e3981610dfd565b9050919050565b6000610e4b8261090d565b9150610e568361090d565b9250828201905080821115610e6e57610e6d610d2f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610f057fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610ec8565b610f0f8683610ec8565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610f4c610f47610f428461090d565b610f27565b61090d565b9050919050565b6000819050919050565b610f6683610f31565b610f7a610f7282610f53565b848454610ed5565b825550505050565b600090565b610f8f610f82565b610f9a818484610f5d565b505050565b5b81811015610fbe57610fb3600082610f87565b600181019050610fa0565b5050565b601f82111561100357610fd481610ea3565b610fdd84610eb8565b81016020851015610fec578190505b611000610ff885610eb8565b830182610f9f565b50505b505050565b600082821c905092915050565b600061102660001984600802611008565b1980831691505092915050565b600061103f8383611015565b9150826002028217905092915050565b61105882610ac8565b67ffffffffffffffff81111561107157611070610e74565b5b61107b8254610c92565b611086828285610fc2565b600060209050601f8311600181146110b957600084156110a7578287015190505b6110b18582611033565b865550611119565b601f1984166110c786610ea3565b60005b828110156110ef578489015182556001820191506020850194506020810190506110ca565b8683101561110c5784890151611108601f891682611015565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b600061113c8385610ad3565b9350611149838584611121565b61115283610b0e565b840190509392505050565b60006080820190506111726000830188610970565b8181036020830152611185818688611130565b90506111946040830185610970565b6111a16060830184610970565b9695505050505050565b7f61756374696f6e20697320636c6f737365642100000000000000000000000000600082015250565b60006111e1601383610ad3565b91506111ec826111ab565b602082019050919050565b60006020820190508181036000830152611210816111d4565b9050919050565b7f646f6e7420656e6f7567682066756e6473210000000000000000000000000000600082015250565b600061124d601283610ad3565b915061125882611217565b602082019050919050565b6000602082019050818103600083015261127c81611240565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006112bd8261090d565b91506112c88361090d565b9250826112d8576112d7611283565b5b828204905092915050565b60006060820190506112f86000830186610970565b6113056020830185610970565b6113126040830184610c0a565b94935050505056fea2646970667358221220869b5aaffb7a40ceee7beff374aa7a5a1a77418c7e6751d712d8ee6483c6543664736f6c634300081b0033";

type AuctionEngineConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuctionEngineConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuctionEngine__factory extends ContractFactory {
  constructor(...args: AuctionEngineConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AuctionEngine & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AuctionEngine__factory {
    return super.connect(runner) as AuctionEngine__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuctionEngineInterface {
    return new Interface(_abi) as AuctionEngineInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AuctionEngine {
    return new Contract(address, _abi, runner) as unknown as AuctionEngine;
  }
}
