/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Transfers, TransfersInterface } from "../Transfers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_maxTransfers",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_index",
        type: "uint8",
      },
    ],
    name: "getTransfer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
        ],
        internalType: "struct Transfers.Transfer",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b7c380380610b7c8339818101604052810190610032919061021a565b6100776040518060400160405280600e81526020017f6d73672e73656e6465723a202573000000000000000000000000000000000000815250336100d960201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160146101000a81548160ff021916908360ff16021790555050610377565b61017782826040516024016100ef929190610318565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061017b60201b60201c565b5050565b61019c8161019761019f60201b6103c6176101c060201b60201c565b60201c565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6101d260201b6103e717819050919050565b6101da610348565b565b600080fd5b600060ff82169050919050565b6101f7816101e1565b811461020257600080fd5b50565b600081519050610214816101ee565b92915050565b6000602082840312156102305761022f6101dc565b5b600061023e84828501610205565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610281578082015181840152602081019050610266565b60008484015250505050565b6000601f19601f8301169050919050565b60006102a982610247565b6102b38185610252565b93506102c3818560208601610263565b6102cc8161028d565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610302826102d7565b9050919050565b610312816102f7565b82525050565b60006040820190508181036000830152610332818561029e565b90506103416020830184610309565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fd5b6107f6806103866000396000f3fe60806040526004361061002d5760003560e01c806355c75d201461019357806372b0d90c146101d05761018e565b3661018e57600160149054906101000a900460ff1660ff16600160159054906101000a900460ff1660ff1610610098576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161008f90610485565b60405180910390fd5b600060405180606001604052803481526020014281526020013373ffffffffffffffffffffffffffffffffffffffff1681525090506000819080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506001601581819054906101000a900460ff1680929190610175906104e1565b91906101000a81548160ff021916908360ff1602179055005b600080fd5b34801561019f57600080fd5b506101ba60048036038101906101b5919061053b565b6101f9565b6040516101c79190610604565b60405180910390f35b3480156101dc57600080fd5b506101f760048036038101906101f2919061065d565b6102ec565b005b6102016103f1565b6000805490508260ff161061024b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610242906106d6565b60405180910390fd5b60008260ff1681548110610262576102616106f6565b5b906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037390610771565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156103c2573d6000803e3d6000fd5b5050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6103ef610791565b565b60405180606001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600082825260208201905092915050565b7f63616e206e6f7420616363657074206d6f7265207472616e7366657273000000600082015250565b600061046f601d83610428565b915061047a82610439565b602082019050919050565b6000602082019050818103600083015261049e81610462565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff82169050919050565b60006104ec826104d4565b915060ff82036104ff576104fe6104a5565b5b600182019050919050565b600080fd5b610518816104d4565b811461052357600080fd5b50565b6000813590506105358161050f565b92915050565b6000602082840312156105515761055061050a565b5b600061055f84828501610526565b91505092915050565b6000819050919050565b61057b81610568565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105ac82610581565b9050919050565b6105bc816105a1565b82525050565b6060820160008201516105d86000850182610572565b5060208201516105eb6020850182610572565b5060408201516105fe60408501826105b3565b50505050565b600060608201905061061960008301846105c2565b92915050565b600061062a82610581565b9050919050565b61063a8161061f565b811461064557600080fd5b50565b60008135905061065781610631565b92915050565b6000602082840312156106735761067261050a565b5b600061068184828501610648565b91505092915050565b7f63616e206e6f74206765742074686973207472616e7366657200000000000000600082015250565b60006106c0601983610428565b91506106cb8261068a565b602082019050919050565b600060208201905081810360008301526106ef816106b3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f796f7520617265206e6f74206f776e6572000000000000000000000000000000600082015250565b600061075b601183610428565b915061076682610725565b602082019050919050565b6000602082019050818103600083015261078a8161074e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220f54d1c1d7443daa98661cc3882c4cc297ae1386b65ee670530487d2b7ba47d4f64736f6c634300081b0033";

type TransfersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransfersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transfers__factory extends ContractFactory {
  constructor(...args: TransfersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _maxTransfers: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_maxTransfers, overrides || {});
  }
  override deploy(
    _maxTransfers: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_maxTransfers, overrides || {}) as Promise<
      Transfers & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Transfers__factory {
    return super.connect(runner) as Transfers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransfersInterface {
    return new Interface(_abi) as TransfersInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Transfers {
    return new Contract(address, _abi, runner) as unknown as Transfers;
  }
}
