/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Logger, LoggerInterface } from "../../contracts/Logger";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getEntry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "log",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506103a98061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638309e8a81461003b578063b8a740e014610057575b600080fd5b6100556004803603810190610050919061025d565b610087565b005b610071600480360381019061006c919061025d565b61015f565b60405161007e91906102ac565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ed90610324565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106101b1576101b0610344565b5b9060005260206000200154905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f4826101c9565b9050919050565b610204816101e9565b811461020f57600080fd5b50565b600081359050610221816101fb565b92915050565b6000819050919050565b61023a81610227565b811461024557600080fd5b50565b60008135905061025781610231565b92915050565b60008060408385031215610274576102736101c4565b5b600061028285828601610212565b925050602061029385828601610248565b9150509250929050565b6102a681610227565b82525050565b60006020820190506102c1600083018461029d565b92915050565b600082825260208201905092915050565b7f7a65726f20616464726573732100000000000000000000000000000000000000600082015250565b600061030e600d836102c7565b9150610319826102d8565b602082019050919050565b6000602082019050818103600083015261033d81610301565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220d08ed4f69c7373f2303741c2c2bd2dc177b475337a158712af864bdc915f639964736f6c634300081b0033";

type LoggerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LoggerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Logger__factory extends ContractFactory {
  constructor(...args: LoggerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Logger & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Logger__factory {
    return super.connect(runner) as Logger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LoggerInterface {
    return new Interface(_abi) as LoggerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Logger {
    return new Contract(address, _abi, runner) as unknown as Logger;
  }
}
