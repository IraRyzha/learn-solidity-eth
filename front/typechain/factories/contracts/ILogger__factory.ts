/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { ILogger, ILoggerInterface } from "../../contracts/ILogger";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getEntry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "log",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ILogger__factory {
  static readonly abi = _abi;
  static createInterface(): ILoggerInterface {
    return new Interface(_abi) as ILoggerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ILogger {
    return new Contract(address, _abi, runner) as unknown as ILogger;
  }
}
