/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { LibDemo, LibDemoInterface } from "../../contracts/LibDemo";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "numbers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "el",
        type: "uint256",
      },
    ],
    name: "runnerArray",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str1",
        type: "string",
      },
      {
        internalType: "string",
        name: "str2",
        type: "string",
      },
    ],
    name: "runnerString",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506105c08061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063501774901461003b578063a434e26f1461006b575b600080fd5b61005560048036038101906100509190610314565b61009b565b604051610062919061038b565b60405180910390f35b6100856004803603810190610080919061045b565b6100af565b604051610092919061038b565b60405180910390f35b60006100a783836100c3565b905092915050565b60006100bb8383610118565b905092915050565b600080600090505b835181101561010c57828482815181106100e8576100e76104d3565b5b6020026020010151036100ff576001915050610112565b80806001019150506100cb565b50600090505b92915050565b60008160405160200161012b9190610573565b60405160208183030381529060405280519060200120836040516020016101529190610573565b6040516020818303038152906040528051906020012014905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101d38261018a565b810181811067ffffffffffffffff821117156101f2576101f161019b565b5b80604052505050565b6000610205610171565b905061021182826101ca565b919050565b600067ffffffffffffffff8211156102315761023061019b565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b61025a81610247565b811461026557600080fd5b50565b60008135905061027781610251565b92915050565b600061029061028b84610216565b6101fb565b905080838252602082019050602084028301858111156102b3576102b2610242565b5b835b818110156102dc57806102c88882610268565b8452602084019350506020810190506102b5565b5050509392505050565b600082601f8301126102fb576102fa610185565b5b813561030b84826020860161027d565b91505092915050565b6000806040838503121561032b5761032a61017b565b5b600083013567ffffffffffffffff81111561034957610348610180565b5b610355858286016102e6565b925050602061036685828601610268565b9150509250929050565b60008115159050919050565b61038581610370565b82525050565b60006020820190506103a0600083018461037c565b92915050565b600080fd5b600067ffffffffffffffff8211156103c6576103c561019b565b5b6103cf8261018a565b9050602081019050919050565b82818337600083830152505050565b60006103fe6103f9846103ab565b6101fb565b90508281526020810184848401111561041a576104196103a6565b5b6104258482856103dc565b509392505050565b600082601f83011261044257610441610185565b5b81356104528482602086016103eb565b91505092915050565b600080604083850312156104725761047161017b565b5b600083013567ffffffffffffffff8111156104905761048f610180565b5b61049c8582860161042d565b925050602083013567ffffffffffffffff8111156104bd576104bc610180565b5b6104c98582860161042d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600081905092915050565b60005b8381101561053657808201518184015260208101905061051b565b60008484015250505050565b600061054d82610502565b610557818561050d565b9350610567818560208601610518565b80840191505092915050565b600061057f8284610542565b91508190509291505056fea26469706673582212200cc8cd76e6a775be553bccfd8a42c461b0f1c9e2e4b5f22db29342e592b9a6e464736f6c634300081b0033";

type LibDemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibDemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibDemo__factory extends ContractFactory {
  constructor(...args: LibDemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LibDemo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LibDemo__factory {
    return super.connect(runner) as LibDemo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibDemoInterface {
    return new Interface(_abi) as LibDemoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LibDemo {
    return new Contract(address, _abi, runner) as unknown as LibDemo;
  }
}
